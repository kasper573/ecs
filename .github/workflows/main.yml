name: CI
on:
  push:
    branches: [ docker ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Packages
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker API image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: ghcr.io/ksandin/ecs/ecs_api:latest

      - name: Build and push Docker Web image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.web
          push: true
          tags: ghcr.io/ksandin/ecs/ecs_web:latest

      - name: Make droplet able to log in to Github Container Registry
        uses: appleboy/ssh-action@master
        with:
          host: ecseditor.xyz
          username: root
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          script: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: root@ecseditor.xyz
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_KNOWNHOST }}
          deploy_path: /root/ecs
          deployment_mode: docker-compose
          copy_stack_file: true
          stack_file_name: docker-compose.yml
          args: up -d
          docker_prune: 'true'
          pull_images_first: 'true'

