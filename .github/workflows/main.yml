name: CI
on:
  push:
    branches: [ docker-image-versioning ]
    paths-ignore:
      - '**.md'
  workflow_dispatch:
jobs:
  build:
    env:
      API_IMAGE: ghcr.io/${{ github.repository }}/ecs_api:${{ GITHUB_SHA::8 }}
      WEB_IMAGE: ghcr.io/${{ github.repository }}/web_api:${{ GITHUB_SHA::8 }}
    runs-on: ubuntu-latest
    steps:
      - name: Test env
        run: |
            echo ${{ env.API_IMAGE }}
            echo ${{ env.WEB_IMAGE }}

#      - uses: actions/checkout@v2
#
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2-beta
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Install Packages
#        run: yarn install
#
#      - name: Run tests
#        run: yarn test
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and push Docker API image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile.api
#          push: true
#          tags: ${{ env.API_IMAGE }}
#
#      - name: Build and push Docker Web image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile.web
#          push: true
#          tags: ${{ env.WEB_IMAGE }}
#
#      - name: Make droplet able to log in to Github Container Registry
#        uses: appleboy/ssh-action@master
#        with:
#          host: ecseditor.xyz
#          username: ${{ secrets.DOCKER_SSH_USERNAME }}
#          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
#          script: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
#
#      - name: Update docker-compose.yml to contain api image reference
#        run: node ./setYamlAnchor.js docker-compose.yml API image ${{ env.API_IMAGE }}
#
#      - name: Update docker-compose.yml to contain web image reference
#        run: node ./setYamlAnchor.js docker-compose.yml WEB image ${{ env.WEB_IMAGE }}
#
#      - name: Deploy to Docker Host
#        uses: wshihadeh/docker-deployment-action@v1
#        with:
#          remote_docker_host: ${{ secrets.DOCKER_SSH_USERNAME }}@ecseditor.xyz
#          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
#          ssh_public_key: ${{ secrets.DOCKER_SSH_KNOWNHOST }}
#          deploy_path: /root/ecs
#          deployment_mode: docker-compose
#          copy_stack_file: true
#          stack_file_name: docker-compose.yml
#          args: up -d
#          docker_prune: 'true'
#          pull_images_first: 'true'